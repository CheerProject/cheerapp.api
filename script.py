from project.judge.models import *
from django.contrib.auth.models import User

user = User(username='user 1')
user.save()

gender = Gender(name='all girl')
gender.save()
gender = Gender(name='coed')
gender.save()
gender = Gender(name='all male')
gender.save()
gender = Gender(name='girl')
gender.save()
gender = Gender(name='male')
gender.save()

level = Level(name='1')
level.save()
level = Level(name='2')
level.save()
level = Level(name='3')
level.save()
level = Level(name='4')
level.save()
level = Level(name='5')
level.save()
level = Level(name='6')
level.save()
level = Level(name='4.2')
level.save()

division = Division(name='baby junior')
division.save()
division = Division(name='mini junior')
division.save()
division = Division(name='junior')
division.save()
division = Division(name='senior')
division.save()
division = Division(name='open')
division.save()
division = Division(name='individual')
division.save()

category = Category(name='flyer')
category.save()
category = Category(name='jumper')
category.save()
category = Category(name='tumbler')
category.save()
category = Category(name='parejas')
category.save()
category = Category(name='trio')
category.save()
category = Category(name='cuarteto')
category.save()
category = Category(name='equipo')
category.save()

group = Group(name='1')
group.save()
group = Group(name='2')
group.save()
group = Group(name='3')
group.save()
group = Group(name='4')
group.save()
group = Group(name='5')
group.save()
group = Group(name='6')
group.save()
group = Group(name='7')
group.save()
group = Group(name='8')
group.save()
group = Group(name='9')
group.save()
group = Group(name='10')
group.save()

round = Round(name='1')
round.save()
round = Round(name='2')
round.save()
round = Round(name='3')
round.save()

scoresheettype = ScoreSheetType(name='varsity')
scoresheettype.save()
scoresheettype = ScoreSheetType(name='nca')
scoresheettype.save()
scoresheettype = ScoreSheetType(name='uca')
scoresheettype.save()

scoremetric = ScoreMetric(name='difficulty')
scoremetric.save()
scoremetric = ScoreMetric(name='technique')
scoremetric.save()
scoremetric = ScoreMetric(name='creativity')
scoremetric.save()

locationtype = LocationType(name='pais')
locationtype.save()
locationtype = LocationType(name='departamento')
locationtype.save()
locationtype = LocationType(name='ciudad')
locationtype.save()
locationtype = LocationType(name='municipio')
locationtype.save()

status = Status(name='on time')
status.save()
status = Status(name='delayed')
status.save()
status = Status(name='checked')
status.save()

parentscorecategory = ParentScoreCategory(name='building skills')
parentscorecategory.save()
parentscorecategory = ParentScoreCategory(name='tumbling skills')
parentscorecategory.save()
parentscorecategory = ParentScoreCategory(name='overall routine')
parentscorecategory.save()

divisiongroup = DivisionGroup(gender=Gender.objects.get(pk=2), level=Level.objects.get(pk=1), division=Division.objects.get(pk=1), category=Category.objects.get(pk=7), group=Group.objects.get(pk=1))
divisiongroup.save()
divisiongroup = DivisionGroup(gender=Gender.objects.get(pk=2), level=Level.objects.get(pk=1), division=Division.objects.get(pk=2), category=Category.objects.get(pk=7), group=Group.objects.get(pk=2))
divisiongroup.save()
divisiongroup = DivisionGroup(gender=Gender.objects.get(pk=2), level=Level.objects.get(pk=2), division=Division.objects.get(pk=1), category=Category.objects.get(pk=7), group=Group.objects.get(pk=3))
divisiongroup.save()
divisiongroup = DivisionGroup(gender=Gender.objects.get(pk=1), level=Level.objects.get(pk=2), division=Division.objects.get(pk=3), category=Category.objects.get(pk=7), group=Group.objects.get(pk=4))
divisiongroup.save()
divisiongroup = DivisionGroup(gender=Gender.objects.get(pk=1), level=Level.objects.get(pk=3), division=Division.objects.get(pk=3), category=Category.objects.get(pk=7), group=Group.objects.get(pk=4))
divisiongroup.save()
divisiongroup = DivisionGroup(gender=Gender.objects.get(pk=2), level=Level.objects.get(pk=2), division=Division.objects.get(pk=4), category=Category.objects.get(pk=7), group=Group.objects.get(pk=5))
divisiongroup.save()
divisiongroup = DivisionGroup(gender=Gender.objects.get(pk=2), level=Level.objects.get(pk=3), division=Division.objects.get(pk=4), category=Category.objects.get(pk=7), group=Group.objects.get(pk=5))
divisiongroup.save()
divisiongroup = DivisionGroup(gender=Gender.objects.get(pk=2), level=Level.objects.get(pk=4), division=Division.objects.get(pk=4), category=Category.objects.get(pk=7), group=Group.objects.get(pk=5))
divisiongroup.save()
divisiongroup = DivisionGroup(gender=Gender.objects.get(pk=1), level=Level.objects.get(pk=2), division=Division.objects.get(pk=5), category=Category.objects.get(pk=7), group=Group.objects.get(pk=6))
divisiongroup.save()
divisiongroup = DivisionGroup(gender=Gender.objects.get(pk=1), level=Level.objects.get(pk=3), division=Division.objects.get(pk=5), category=Category.objects.get(pk=7), group=Group.objects.get(pk=6))
divisiongroup.save()
divisiongroup = DivisionGroup(gender=Gender.objects.get(pk=1), level=Level.objects.get(pk=4), division=Division.objects.get(pk=5), category=Category.objects.get(pk=7), group=Group.objects.get(pk=6))
divisiongroup.save()
divisiongroup = DivisionGroup(gender=Gender.objects.get(pk=2), level=Level.objects.get(pk=4), division=Division.objects.get(pk=5), category=Category.objects.get(pk=7), group=Group.objects.get(pk=7))
divisiongroup.save()
divisiongroup = DivisionGroup(gender=Gender.objects.get(pk=2), level=Level.objects.get(pk=5), division=Division.objects.get(pk=5), category=Category.objects.get(pk=7), group=Group.objects.get(pk=8))
divisiongroup.save()
divisiongroup = DivisionGroup(gender=Gender.objects.get(pk=2), level=Level.objects.get(pk=6), division=Division.objects.get(pk=5), category=Category.objects.get(pk=7), group=Group.objects.get(pk=9))
divisiongroup.save()

scorecategory = ScoreCategory(name='stunts', parentscorecategory=ParentScoreCategory.objects.get(pk=1))
scorecategory.save()
scorecategory = ScoreCategory(name='pyramids', parentscorecategory=ParentScoreCategory.objects.get(pk=1))
scorecategory.save()
scorecategory = ScoreCategory(name='tosses', parentscorecategory=ParentScoreCategory.objects.get(pk=1))
scorecategory.save()
scorecategory = ScoreCategory(name='quantity/coed', parentscorecategory=ParentScoreCategory.objects.get(pk=1))
scorecategory.save()
scorecategory = ScoreCategory(name='standing tumbling', parentscorecategory=ParentScoreCategory.objects.get(pk=2))
scorecategory.save()
scorecategory = ScoreCategory(name='running tumbling', parentscorecategory=ParentScoreCategory.objects.get(pk=2))
scorecategory.save()
scorecategory = ScoreCategory(name='jumps', parentscorecategory=ParentScoreCategory.objects.get(pk=2))
scorecategory.save()
scorecategory = ScoreCategory(name='routine composition', parentscorecategory=ParentScoreCategory.objects.get(pk=3))
scorecategory.save()
scorecategory = ScoreCategory(name='performance', parentscorecategory=ParentScoreCategory.objects.get(pk=3))
scorecategory.save()
scorecategory = ScoreCategory(name='dance', parentscorecategory=ParentScoreCategory.objects.get(pk=3))
scorecategory.save()

location = Location(name='Guatemala', locationtype=LocationType.objects.get(pk=1))
location.save()
location = Location(name='Guatemala', locationtype=LocationType.objects.get(pk=2), location=Location.objects.get(pk=1))
location.save()
location = Location(name='Guatemala', locationtype=LocationType.objects.get(pk=3), location=Location.objects.get(pk=2))
location.save()
location = Location(name='Guatemala', locationtype=LocationType.objects.get(pk=4), location=Location.objects.get(pk=3))
location.save()

scoresheet = ScoreSheet(name='hoja de calificacion 1', scoresheettype=ScoreSheetType.objects.get(pk=1))
scoresheet.save()
scoresheet = ScoreSheet(name='hoja de calificacion 2', scoresheettype=ScoreSheetType.objects.get(pk=1))
scoresheet.save()
scoresheet = ScoreSheet(name='hoja de calificacion 3', scoresheettype=ScoreSheetType.objects.get(pk=1))
scoresheet.save()

scoresheetelement = ScoreSheetElement(min_score=1, max_score=5, scoremetric=ScoreMetric.objects.get(pk=1), scorecategory=ScoreCategory.objects.get(pk=1), scoresheet=ScoreSheet.objects.get(pk=1))
scoresheetelement.save()
scoresheetelement = ScoreSheetElement(min_score=1, max_score=5, scoremetric=ScoreMetric.objects.get(pk=2), scorecategory=ScoreCategory.objects.get(pk=1), scoresheet=ScoreSheet.objects.get(pk=1))
scoresheetelement.save()
scoresheetelement = ScoreSheetElement(min_score=1, max_score=2.5, scoremetric=ScoreMetric.objects.get(pk=3), scorecategory=ScoreCategory.objects.get(pk=1), scoresheet=ScoreSheet.objects.get(pk=1))
scoresheetelement.save()

scoresheetelement = ScoreSheetElement(min_score=1, max_score=5, scoremetric=ScoreMetric.objects.get(pk=1), scorecategory=ScoreCategory.objects.get(pk=2), scoresheet=ScoreSheet.objects.get(pk=1))
scoresheetelement.save()
scoresheetelement = ScoreSheetElement(min_score=1, max_score=5, scoremetric=ScoreMetric.objects.get(pk=2), scorecategory=ScoreCategory.objects.get(pk=2), scoresheet=ScoreSheet.objects.get(pk=1))
scoresheetelement.save()
scoresheetelement = ScoreSheetElement(min_score=1, max_score=2.5, scoremetric=ScoreMetric.objects.get(pk=3), scorecategory=ScoreCategory.objects.get(pk=2), scoresheet=ScoreSheet.objects.get(pk=1))
scoresheetelement.save()

scoresheetelement = ScoreSheetElement(min_score=1, max_score=5, scoremetric=ScoreMetric.objects.get(pk=1), scorecategory=ScoreCategory.objects.get(pk=3), scoresheet=ScoreSheet.objects.get(pk=1))
scoresheetelement.save()
scoresheetelement = ScoreSheetElement(min_score=1, max_score=5, scoremetric=ScoreMetric.objects.get(pk=2), scorecategory=ScoreCategory.objects.get(pk=3), scoresheet=ScoreSheet.objects.get(pk=1))
scoresheetelement.save()

scoresheetelement = ScoreSheetElement(min_score=1, max_score=5, scoremetric=ScoreMetric.objects.get(pk=1), scorecategory=ScoreCategory.objects.get(pk=4), scoresheet=ScoreSheet.objects.get(pk=1))
scoresheetelement.save()

scoresheetelement = ScoreSheetElement(min_score=1, max_score=5, scoremetric=ScoreMetric.objects.get(pk=1), scorecategory=ScoreCategory.objects.get(pk=5), scoresheet=ScoreSheet.objects.get(pk=1))
scoresheetelement.save()
scoresheetelement = ScoreSheetElement(min_score=1, max_score=5, scoremetric=ScoreMetric.objects.get(pk=2), scorecategory=ScoreCategory.objects.get(pk=5), scoresheet=ScoreSheet.objects.get(pk=1))
scoresheetelement.save()

scoresheetelement = ScoreSheetElement(min_score=1, max_score=5, scoremetric=ScoreMetric.objects.get(pk=1), scorecategory=ScoreCategory.objects.get(pk=6), scoresheet=ScoreSheet.objects.get(pk=1))
scoresheetelement.save()
scoresheetelement = ScoreSheetElement(min_score=1, max_score=5, scoremetric=ScoreMetric.objects.get(pk=2), scorecategory=ScoreCategory.objects.get(pk=6), scoresheet=ScoreSheet.objects.get(pk=1))
scoresheetelement.save()

scoresheetelement = ScoreSheetElement(min_score=1, max_score=5, scoremetric=ScoreMetric.objects.get(pk=1), scorecategory=ScoreCategory.objects.get(pk=7), scoresheet=ScoreSheet.objects.get(pk=1))
scoresheetelement.save()
scoresheetelement = ScoreSheetElement(min_score=1, max_score=5, scoremetric=ScoreMetric.objects.get(pk=2), scorecategory=ScoreCategory.objects.get(pk=7), scoresheet=ScoreSheet.objects.get(pk=1))
scoresheetelement.save()

scoresheetelement = ScoreSheetElement(min_score=1, max_score=10, scoremetric=ScoreMetric.objects.get(pk=1), scorecategory=ScoreCategory.objects.get(pk=8), scoresheet=ScoreSheet.objects.get(pk=1))
scoresheetelement.save()

scoresheetelement = ScoreSheetElement(min_score=1, max_score=10, scoremetric=ScoreMetric.objects.get(pk=1), scorecategory=ScoreCategory.objects.get(pk=9), scoresheet=ScoreSheet.objects.get(pk=1))
scoresheetelement.save()

scoresheetelement = ScoreSheetElement(min_score=1, max_score=10, scoremetric=ScoreMetric.objects.get(pk=1), scorecategory=ScoreCategory.objects.get(pk=10), scoresheet=ScoreSheet.objects.get(pk=1))
scoresheetelement.save()

team = Team(name='butterfly', location=Location.objects.get(pk=4))
team.save()
team = Team(name='cheer force usac', location=Location.objects.get(pk=4))
team.save()
team = Team(name='cougars', location=Location.objects.get(pk=4))
team.save()
team = Team(name='cougars dinasty supreme', location=Location.objects.get(pk=4))
team.save()
team = Team(name='cougars magic dolls', location=Location.objects.get(pk=4))
team.save()
team = Team(name='eagles', location=Location.objects.get(pk=4))
team.save()
team = Team(name='evolution', location=Location.objects.get(pk=4))
team.save()
team = Team(name='fenix', location=Location.objects.get(pk=4))
team.save()
team = Team(name='golden digef', location=Location.objects.get(pk=4))
team.save()
team = Team(name='halcones de santa rosa', location=Location.objects.get(pk=4))
team.save()
team = Team(name='independiente', location=Location.objects.get(pk=4))
team.save()
team = Team(name='infinity', location=Location.objects.get(pk=4))
team.save()
team = Team(name='infinity all girl', location=Location.objects.get(pk=4))
team.save()
team = Team(name='infinity coed', location=Location.objects.get(pk=4))
team.save()
team = Team(name='landivar', location=Location.objects.get(pk=4))
team.save()
team = Team(name='lions', location=Location.objects.get(pk=4))
team.save()
team = Team(name='lions psj', location=Location.objects.get(pk=4))
team.save()
team = Team(name='little cougars', location=Location.objects.get(pk=4))
team.save()
team = Team(name='panthers', location=Location.objects.get(pk=4))
team.save()
team = Team(name='pegasos all stars', location=Location.objects.get(pk=4))
team.save()
team = Team(name='pegasos diamonds', location=Location.objects.get(pk=4))
team.save()
team = Team(name='pegasos legacy', location=Location.objects.get(pk=4))
team.save()
team = Team(name='pegasos shiny wings', location=Location.objects.get(pk=4))
team.save()
team = Team(name='phantoms', location=Location.objects.get(pk=4))
team.save()
team = Team(name='phantoms elite', location=Location.objects.get(pk=4))
team.save()
team = Team(name='phantoms midnight', location=Location.objects.get(pk=4))
team.save()
team = Team(name='queen', location=Location.objects.get(pk=4))
team.save()
team = Team(name='sabertooth', location=Location.objects.get(pk=4))
team.save()
team = Team(name='slifers', location=Location.objects.get(pk=4))
team.save()
team = Team(name='stars', location=Location.objects.get(pk=4))
team.save()
team = Team(name='suizo americano', location=Location.objects.get(pk=4))
team.save()
team = Team(name='tigers', location=Location.objects.get(pk=4))
team.save()
team = Team(name='titans', location=Location.objects.get(pk=4))
team.save()
team = Team(name='fenix 2', location=Location.objects.get(pk=4))
team.save()
team = Team(name='fenix 3', location=Location.objects.get(pk=4))
team.save()
team = Team(name='lions2 psj', location=Location.objects.get(pk=4))
team.save()
team = Team(name='lions3 psj', location=Location.objects.get(pk=4))
team.save()
team = Team(name='lions psj all male', location=Location.objects.get(pk=4))
team.save()
team = Team(name='panthers 2', location=Location.objects.get(pk=4))
team.save()
team = Team(name='infinity 2', location=Location.objects.get(pk=4))
team.save()
team = Team(name='infinity 3', location=Location.objects.get(pk=4))
team.save()
team = Team(name='stars 2', location=Location.objects.get(pk=4))
team.save()
team = Team(name='stars 3', location=Location.objects.get(pk=4))
team.save()
team = Team(name='stars 4', location=Location.objects.get(pk=4))
team.save()
team = Team(name='stars 5', location=Location.objects.get(pk=4))
team.save()
team = Team(name='phantoms 2', location=Location.objects.get(pk=4))
team.save()
team = Team(name='cougars 2', location=Location.objects.get(pk=4))
team.save()
team = Team(name='cheer force usac 2', location=Location.objects.get(pk=4))
team.save()
team = Team(name='independiente 2', location=Location.objects.get(pk=4))
team.save()

userskillpermission = UserSkillPermission(user=User.objects.get(pk=1), scorecategory=ScoreCategory.objects.get(pk=1))
userskillpermission.save()
userskillpermission = UserSkillPermission(user=User.objects.get(pk=1), scorecategory=ScoreCategory.objects.get(pk=2))
userskillpermission.save()
userskillpermission = UserSkillPermission(user=User.objects.get(pk=1), scorecategory=ScoreCategory.objects.get(pk=3))
userskillpermission.save()
userskillpermission = UserSkillPermission(user=User.objects.get(pk=1), scorecategory=ScoreCategory.objects.get(pk=4))
userskillpermission.save()
userskillpermission = UserSkillPermission(user=User.objects.get(pk=1), scorecategory=ScoreCategory.objects.get(pk=5))
userskillpermission.save()
userskillpermission = UserSkillPermission(user=User.objects.get(pk=1), scorecategory=ScoreCategory.objects.get(pk=6))
userskillpermission.save()
userskillpermission = UserSkillPermission(user=User.objects.get(pk=1), scorecategory=ScoreCategory.objects.get(pk=7))
userskillpermission.save()
userskillpermission = UserSkillPermission(user=User.objects.get(pk=1), scorecategory=ScoreCategory.objects.get(pk=8))
userskillpermission.save()
userskillpermission = UserSkillPermission(user=User.objects.get(pk=1), scorecategory=ScoreCategory.objects.get(pk=9))
userskillpermission.save()
userskillpermission = UserSkillPermission(user=User.objects.get(pk=1), scorecategory=ScoreCategory.objects.get(pk=10))
userskillpermission.save()

championship = Championship(name='anap', date=timezone.now(), address='guatemala', scoresheet=ScoreSheet.objects.get(pk=1))
championship.save()

registration = Registration(date=timezone.now(), total_men=10, total_women=10, coach='entrenador', team=Team.objects.get(name='pegasos shiny wings'), championship=Championship.objects.get(name='anap'), divisiongroup=DivisionGroup.objects.get(pk=1), status=Status.objects.get(name='on time'))
registration.save()
registration = Registration(date=timezone.now(), total_men=10, total_women=10, coach='entrenador', team=Team.objects.get(name='little cougars'), championship=Championship.objects.get(name='anap'), divisiongroup=DivisionGroup.objects.get(pk=2), status=Status.objects.get(name='on time'))
registration.save()
registration = Registration(date=timezone.now(), total_men=10, total_women=10, coach='entrenador', team=Team.objects.get(name='titans'), championship=Championship.objects.get(name='anap'), divisiongroup=DivisionGroup.objects.get(pk=3), status=Status.objects.get(name='on time'))
registration.save()
registration = Registration(date=timezone.now(), total_men=10, total_women=10, coach='entrenador', team=Team.objects.get(name='suizo americano'), championship=Championship.objects.get(name='anap'), divisiongroup=DivisionGroup.objects.get(pk=3), status=Status.objects.get(name='on time'))
registration.save()
registration = Registration(date=timezone.now(), total_men=10, total_women=10, coach='entrenador', team=Team.objects.get(name='butterfly'), championship=Championship.objects.get(name='anap'), divisiongroup=DivisionGroup.objects.get(pk=4), status=Status.objects.get(name='on time'))
registration.save()
registration = Registration(date=timezone.now(), total_men=10, total_women=10, coach='entrenador', team=Team.objects.get(name='pegasos legacy'), championship=Championship.objects.get(name='anap'), divisiongroup=DivisionGroup.objects.get(pk=4), status=Status.objects.get(name='on time'))
registration.save()
registration = Registration(date=timezone.now(), total_men=10, total_women=10, coach='entrenador', team=Team.objects.get(name='infinity all girl'), championship=Championship.objects.get(name='anap'), divisiongroup=DivisionGroup.objects.get(pk=4), status=Status.objects.get(name='on time'))
registration.save()
registration = Registration(date=timezone.now(), total_men=10, total_women=10, coach='entrenador', team=Team.objects.get(name='slifers'), championship=Championship.objects.get(name='anap'), divisiongroup=DivisionGroup.objects.get(pk=5), status=Status.objects.get(name='on time'))
registration.save()
registration = Registration(date=timezone.now(), total_men=10, total_women=10, coach='entrenador', team=Team.objects.get(name='sabertooth'), championship=Championship.objects.get(name='anap'), divisiongroup=DivisionGroup.objects.get(pk=5), status=Status.objects.get(name='on time'))
registration.save()
registration = Registration(date=timezone.now(), total_men=10, total_women=10, coach='entrenador', team=Team.objects.get(name='halcones de santa rosa'), championship=Championship.objects.get(name='anap'), divisiongroup=DivisionGroup.objects.get(pk=5), status=Status.objects.get(name='on time'))
registration.save()
registration = Registration(date=timezone.now(), total_men=10, total_women=10, coach='entrenador', team=Team.objects.get(name='golden digef'), championship=Championship.objects.get(name='anap'), divisiongroup=DivisionGroup.objects.get(pk=5), status=Status.objects.get(name='on time'))
registration.save()
registration = Registration(date=timezone.now(), total_men=10, total_women=10, coach='entrenador', team=Team.objects.get(name='fenix'), championship=Championship.objects.get(name='anap'), divisiongroup=DivisionGroup.objects.get(pk=5), status=Status.objects.get(name='on time'))
registration.save()
registration = Registration(date=timezone.now(), total_men=10, total_women=10, coach='entrenador', team=Team.objects.get(name='lions psj'), championship=Championship.objects.get(name='anap'), divisiongroup=DivisionGroup.objects.get(pk=5), status=Status.objects.get(name='on time'))
registration.save()
registration = Registration(date=timezone.now(), total_men=10, total_women=10, coach='entrenador', team=Team.objects.get(name='cougars magic dolls'), championship=Championship.objects.get(name='anap'), divisiongroup=DivisionGroup.objects.get(pk=6), status=Status.objects.get(name='on time'))
registration.save()
registration = Registration(date=timezone.now(), total_men=10, total_women=10, coach='entrenador', team=Team.objects.get(name='pegasos diamonds'), championship=Championship.objects.get(name='anap'), divisiongroup=DivisionGroup.objects.get(pk=6), status=Status.objects.get(name='on time'))
registration.save()
registration = Registration(date=timezone.now(), total_men=10, total_women=10, coach='entrenador', team=Team.objects.get(name='phantoms midnight'), championship=Championship.objects.get(name='anap'), divisiongroup=DivisionGroup.objects.get(pk=6), status=Status.objects.get(name='on time'))
registration.save()
registration = Registration(date=timezone.now(), total_men=10, total_women=10, coach='entrenador', team=Team.objects.get(name='stars'), championship=Championship.objects.get(name='anap'), divisiongroup=DivisionGroup.objects.get(pk=7), status=Status.objects.get(name='on time'))
registration.save()
registration = Registration(date=timezone.now(), total_men=10, total_women=10, coach='entrenador', team=Team.objects.get(name='landivar'), championship=Championship.objects.get(name='anap'), divisiongroup=DivisionGroup.objects.get(pk=7), status=Status.objects.get(name='on time'))
registration.save()
registration = Registration(date=timezone.now(), total_men=10, total_women=10, coach='entrenador', team=Team.objects.get(name='evolution'), championship=Championship.objects.get(name='anap'), divisiongroup=DivisionGroup.objects.get(pk=7), status=Status.objects.get(name='on time'))
registration.save()
registration = Registration(date=timezone.now(), total_men=10, total_women=10, coach='entrenador', team=Team.objects.get(name='lions'), championship=Championship.objects.get(name='anap'), divisiongroup=DivisionGroup.objects.get(pk=7), status=Status.objects.get(name='on time'))
registration.save()
registration = Registration(date=timezone.now(), total_men=10, total_women=10, coach='entrenador', team=Team.objects.get(name='infinity coed'), championship=Championship.objects.get(name='anap'), divisiongroup=DivisionGroup.objects.get(pk=8), status=Status.objects.get(name='on time'))
registration.save()
registration = Registration(date=timezone.now(), total_men=10, total_women=10, coach='entrenador', team=Team.objects.get(name='pegasos all stars'), championship=Championship.objects.get(name='anap'), divisiongroup=DivisionGroup.objects.get(pk=8), status=Status.objects.get(name='on time'))
registration.save()
registration = Registration(date=timezone.now(), total_men=10, total_women=10, coach='entrenador', team=Team.objects.get(name='panthers'), championship=Championship.objects.get(name='anap'), divisiongroup=DivisionGroup.objects.get(pk=8), status=Status.objects.get(name='on time'))
registration.save()
registration = Registration(date=timezone.now(), total_men=10, total_women=10, coach='entrenador', team=Team.objects.get(name='cougars dinasty supreme'), championship=Championship.objects.get(name='anap'), divisiongroup=DivisionGroup.objects.get(pk=9), status=Status.objects.get(name='on time'))
registration.save()
registration = Registration(date=timezone.now(), total_men=10, total_women=10, coach='entrenador', team=Team.objects.get(name='phantoms elite'), championship=Championship.objects.get(name='anap'), divisiongroup=DivisionGroup.objects.get(pk=9), status=Status.objects.get(name='on time'))
registration.save()
registration = Registration(date=timezone.now(), total_men=10, total_women=10, coach='entrenador', team=Team.objects.get(name='cheer force usac'), championship=Championship.objects.get(name='anap'), divisiongroup=DivisionGroup.objects.get(pk=9), status=Status.objects.get(name='on time'))
registration.save()
